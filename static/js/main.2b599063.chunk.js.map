{"version":3,"sources":["images/02.jpg","images/01.jpg","images/03.jpg","images/06.jpg","images/04.jpg","images/05.jpg","images/08.jpg","images/09.jpg","images/10.jpg","images/11.jpg","images/12.jpg","images/13.jpg","components/slideshow/slideshow.js","App.slideshow.js","components/slideshow-gallery/slideshow-gallery.js","App.slideshow-gallery.js","components/modal-image/modal-image.js","App.modal-image.js","components/lightbox/lightbox.js","App.lightbox.js","components/tab-gallery/tab-gallery.js","App.tab-gallery.js","components/tab-content/tab-content.js","App.tab-content.js","components/collapsible-content/collapsible-content.js","App.collapse-content.js","components/draggable-element/draggable-element.js","App.draggable-element.js","components/draggable-note/draggable-note.js","App.draggable-note.js","components/sticky-notes/sticky-notes.js","App.sticky-notes.js","components/countdown-timer/countdown-timer.js","App.countdown-timer.js","components/tooltip/tooltip.js","App.tooltip.js","components/scroll-to-top/scroll-to-top.js","App.scroll-to-top.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Slideshow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","slideIndex","ratioWHArray","ratio","split","ratioWH","backward","bind","assertThisInitialized","forward","setSlideIndex","getNewSlideIndex","updateDimensions","runAutomatic","step","numberSlide","input","length","newSlideIndex","setState","index","containerElm","style","height","concat","offsetWidth","_this2","rootElm","ReactDOM","findDOMNode","querySelector","window","addEventListener","mode","timeout","automaticInterval","setInterval","Number","parseInt","removeEventListener","clearInterval","_this3","react_default","a","createElement","className","map","image","key","src","alt","caption","onClick","_","React","Component","collection","img1","img2","img3","img4","img5","img6","SlideshowApp","slideshow_Slideshow","href","SlideshowGallery","containerBottomElm","width","App","slideshow_gallery_SlideshowGallery","ModalImage","showModal","hideModal","modalElm","display","imageElm","modal_image_ModalImage","img8","img9","LightBox","slideshowGallery","createRef","current","visibility","ref","img10","lightbox_LightBox","TabGallery","imageSrc","imageText","showImage","hideImage","tabHeight","bottomHeight","img11","img12","img13","tab_gallery_TabGallery","TabContent","refTabContents","forEach","push","tabIndex","changeTabIndex","updateTabContent","refTab","elmTab","maxHeight","scrollHeight","opacity","tabContent","title","content","contents","tab_content_TabContent","CollapsibleContent","isActive","toggleCollapseContent","updateContentMaxHeight","panelContent","root","children","collapsible_content_CollapsibleContent","maxWidth","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","DraggableElement","dragMouseDown","elementDrag","closeDragElement","elm","header","offsetHeight","scrollWidth","isOverflowedX","setProperty","isOverflowedY","addScrollbarYIfNeeded","e","preventDefault","startX","clientX","startY","clientY","deltaX","deltaY","newTop","offsetTop","newLeft","offsetLeft","newRight","newBottom","left","top","elemStyle","draggable_element_DraggableElement","DraggableNote","resizeMouseDown","contentResize","closeResizeContent","contentChange","updateContentSize","handleDataChange","id","event","target","value","undefined","zIndex","spellCheck","onChange","defaultValue","draggable_note_DraggableNote","StickyNotes","initialStateForEachNote","count","activeId","notes","initNoteData","onAddNote","onRemoveNote","makeActive","offset","noteData","objectSpread","stopPropagation","el","rect","getBoundingClientRect","scrollLeft","pageXOffset","scrollTop","pageYOffset","getOffset","toConsumableArray","remainNotes","filter","note","data","Fragment","sticky_notes_StickyNotes","CountdownTimer","countDownDate","Date","timeDate","getTime","updateTimer","now","distance","days","Math","floor","hours","minutes","seconds","contentElm","innerText","counterInterval","fontSize","color","countdown_timer_CountdownTimer","Tooltip","rootStyle","borderBottomStyle","tooltipWidth","tooltipBackgroundColor","tooltipColor","text","position","tooltipText","margin","tooltip_Tooltip","ScrollToTop","rootRef","handleClick","scroll","behavior","showOrHideBackToTopButton","thresholdTop","handleScroll","debounceTimer","clearTimeout","setTimeout","elmStyle","backgroundColor","scroll_to_top_scroll_to_top","Home","padding","Link","to","HashRouter","Switch","Route","exact","path","component","SlideshowGalleryApp","ModalImageApp","LightBoxApp","TabGalleryApp","TabContentApp","CollapsibleContentApp","DraggableElementApp","DraggableNoteApp","StickyNotesApp","CountdownTimerApp","TooltipApp","Boolean","location","hostname","match","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b599063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/02.b25a2ec0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/01.4dedc228.jpg\";","module.exports = __webpack_public_path__ + \"static/media/03.cf95d594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/06.a0a6badb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/04.d66c4395.jpg\";","module.exports = __webpack_public_path__ + \"static/media/05.0d563a91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/08.075ab7df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/09.6089d193.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.9a4234ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.1c3d8f55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.7f4685aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13.c7fb0112.jpg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './slideshow.css';\r\n\r\nexport default class Slideshow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /* \r\n    * State slideIndex dùng để xác định xem slide nào đang được active. \r\n    * Các ảnh sẽ được xếp chồng lên nhau, cái nào active thì hiển thị,\r\n    * Cái nào không active thì ẩn đi.\r\n    */\r\n    this.state = {\r\n      slideIndex: 0\r\n    };\r\n\r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước. \r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.backward = this.backward.bind(this);\r\n    this.forward = this.forward.bind(this);\r\n    this.setSlideIndex = this.setSlideIndex.bind(this);\r\n    this.getNewSlideIndex = this.getNewSlideIndex.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.runAutomatic = this.runAutomatic.bind(this);\r\n  }\r\n\r\n  /*\r\n  * Tính chỉ số SlideIndex mới, với step là bước nhảy: +1 hoặc -1\r\n  * Giả sử, mình có 6 ảnh => các chỉ số lần lượt là: 0, 1, 2,...5\r\n  * Chú ý:\r\n  * Nếu đang ở chỉ số 5 mà đi về phía trước thì slideIndex = 0\r\n  * Nếu đang ở chỉ số 0 mà về sau thì slideIndex = 5\r\n  */\r\n  getNewSlideIndex(step) {\r\n    const slideIndex = this.state.slideIndex;\r\n    const numberSlide = this.props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  }\r\n\r\n  // Quay về ảnh phía trước, tức index giảm 1 => step = -1\r\n  backward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(-1)\r\n    });\r\n  }\r\n\r\n  // Tiến tới ảnh phía sau, tức index tăng 1 => step = 1\r\n  forward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  // Xác định slideIndex nào sẽ được active\r\n  setSlideIndex(index) {\r\n    this.setState({\r\n      slideIndex: index\r\n    })\r\n  }\r\n\r\n  /*\r\n  * Cập nhật chiều cao cho container khi thay đổi kích thước màn hình\r\n  * Trong phần CSS, mình để container có width = 100%,\r\n  * Nên dù kéo to hay thu nhỏ thì width vẫn bằng 100%\r\n  * Nhưng chiều cao phải tính lại dựa vào width và tỉ lệ this.ratioWH\r\n  */\r\n  updateDimensions() {\r\n    this.containerElm.style.height = `${this.containerElm.offsetWidth / this.ratioWH}px`;\r\n  }\r\n\r\n  /*\r\n  * Nếu người dùng truyền vào thuộc tính mode = automatic \r\n  * thì Slideshow sẽ chạy tự động dựa vào interval.\r\n  * Hàm này sẽ được gọi trong mỗi lượt lặp lại \r\n  * để cập nhật slideIndex mới cho Slideshow\r\n  */\r\n  runAutomatic() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Hàm này thuộc về React Component Lifecycle\r\n  * được gọi sau khi component này được render xong \r\n  * Trong đây, sẽ lưu lại reference cho container - this.containerElm\r\n  * Cập nhật lại chiều cao cho container - this.updateDimensions();\r\n  * Đăng ký sự kiện thay đổi kích thước - resize\r\n  * Kiểm tra nếu mode === \"automatic\" thì sẽ tạo mới một interval\r\n  * để thay đổi hình ảnh - this.runAutomatic()\r\n  * với giá trị timeout được truyền từ props hoặc mặc định là 5000 ms\r\n  */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".container\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    if (this.props.mode === \"automatic\") {\r\n      const timeout = this.props.timeout || 5000;\r\n\r\n      this.automaticInterval = setInterval(\r\n        () => this.runAutomatic(), \r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Hàm này cũng thuộc về React Component Lifecycle - \r\n  * được gọi khi component này bị xóa khỏi màn hình\r\n  * Lúc này, mình phải hủy bỏ sự kiện khi resize \r\n  * và xóa bỏ interval đã khai bảo bên trên để tránh leak memory.\r\n  */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n    if (this.automaticInterval) clearInterval(this.automaticInterval);\r\n  }\r\n\r\n  /*\r\n  * Giao diện của component\r\n  * với phần tử ngoài cùng mình để className=\"lp-slideshow\" \r\n  * để tránh xung đột về tên với các component khác\r\n  */\r\n  render() {\r\n    return (\r\n      <div className=\"lp-slideshow\">\r\n        <div className=\"container\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`slide ${this.state.slideIndex === index ? \"active\" : \"\"}`}\r\n                >\r\n                  <div className=\"number-text\">{`${index + 1} / ${this.props.input.length}`}</div>\r\n                  <img className=\"image\" src={image.src} alt={image.caption} />\r\n                  <div className=\"caption-text\">{image.caption}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n          <span className=\"prev\" onClick={this.backward}>&#10094;</span>\r\n          <span className=\"next\" onClick={this.forward}>&#10095;</span>\r\n        </div>\r\n\r\n        <div className=\"dot-container\">\r\n          {\r\n            this.props.input.map((_, index) => {\r\n              return (\r\n                <span\r\n                  key={index}\r\n                  className={`dot ${this.state.slideIndex === index ? \"active\" : \"\"}`}\r\n                  onClick={() => this.setSlideIndex(index)}\r\n                >\r\n                </span>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Slideshow from './components/slideshow/slideshow';\r\nimport img1 from './images/01.jpg';\r\nimport img2 from './images/02.jpg';\r\nimport img3 from './images/03.jpg';\r\nimport img4 from './images/04.jpg';\r\nimport img5 from './images/05.jpg';\r\nimport img6 from './images/06.jpg';\r\n\r\nconst collection = [\r\n  { src: img1, caption: \"Caption one\" },\r\n  { src: img2, caption: \"Caption two\" },\r\n  { src: img3, caption: \"Caption three\" },\r\n  { src: img4, caption: \"Caption four\" },\r\n  { src: img5, caption: \"Caption five\" },\r\n  { src: img6, caption: \"Caption six\" },\r\n];\r\n\r\nexport default class SlideshowApp extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Slideshow</h2>\r\n\r\n        <Slideshow \r\n          input={collection}  \r\n          ratio={`3:2`}\r\n          mode={`manual`}\r\n        />\r\n\r\n        <Slideshow \r\n          input={collection}  \r\n          ratio={`3:2`}\r\n          mode={`automatic`}\r\n          timeout={`3000`}\r\n        />\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './slideshow-gallery.css';\r\n\r\nexport default class SlideshowGallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    /* \r\n    * State slideIndex dùng để xác định xem slide nào đang được active. \r\n    * Các ảnh sẽ được xếp chồng lên nhau, cái nào active thì hiển thị,\r\n    * Cái nào không active thì ẩn đi.\r\n    */\r\n    this.state = {\r\n      slideIndex: 0\r\n    };\r\n\r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước. \r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.backward = this.backward.bind(this);\r\n    this.forward = this.forward.bind(this);\r\n    this.setSlideIndex = this.setSlideIndex.bind(this);\r\n    this.getNewSlideIndex = this.getNewSlideIndex.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.runAutomatic = this.runAutomatic.bind(this);\r\n  }\r\n\r\n  /*\r\n  * Tính chỉ số SlideIndex mới, với step là bước nhảy: +1 hoặc -1\r\n  * Giả sử, mình có 6 ảnh => các chỉ số lần lượt là: 0, 1, 2,...5\r\n  * Chú ý:\r\n  * Nếu đang ở chỉ số 5 mà đi về phía trước thì slideIndex = 0\r\n  * Nếu đang ở chỉ số 0 mà về sau thì slideIndex = 5\r\n  */\r\n  getNewSlideIndex(step) {\r\n    const slideIndex = this.state.slideIndex;\r\n    const numberSlide = this.props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  }\r\n  \r\n  // Quay về ảnh phía trước, tức index giảm 1 => step = -1\r\n  backward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(-1)\r\n    });\r\n  }\r\n\r\n  // Tiến tới ảnh phía sau, tức index tăng 1 => step = 1\r\n  forward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  // Xác định slideIndex nào sẽ được active\r\n  setSlideIndex(index) {\r\n    this.setState({\r\n      slideIndex: index\r\n    })\r\n  }\r\n\r\n  /*\r\n  * Cập nhật chiều cao cho container khi thay đổi kích thước màn hình\r\n  * Trong phần CSS, mình để container có width = 100%,\r\n  * Nên dù kéo to hay thu nhỏ thì width vẫn bằng 100% kích thước parent.\r\n  * Nhưng chiều cao là giá trị tuyệt đối nên phải tính lại, \r\n  * dựa vào width và tỉ lệ this.ratioWH = width / height\r\n  * \r\n  * Chú ý: ví dụ Slideshow Gallery này khác với ví dụ Slideshow thông thường\r\n  * ở chỗ là mình thay những chấm tròn ở dưới thành dãy các ảnh.\r\n  * Vì vậy, mình cũng phải tính lại chiều cao của phần đó - this.containerBottomElm.\r\n  * \r\n  * Ngoài ra, số lượng ảnh ở phía dưới là this.props.input.length chứ không phải 1 ảnh\r\n  * nên mình phải chia cho this.props.input.length - đây là phần khác so với\r\n  * khi tính toán với this.containerElm\r\n  */\r\n  updateDimensions() {\r\n    this.containerElm.style.height = `${this.containerElm.offsetWidth / this.ratioWH}px`;\r\n    this.containerBottomElm.style.height = `${this.containerBottomElm.offsetWidth / this.props.input.length / this.ratioWH}px`;\r\n  }\r\n\r\n  /*\r\n  * Nếu người dùng truyền vào thuộc tính mode = automatic \r\n  * thì Slideshow Gallery sẽ chạy tự động dựa vào interval.\r\n  * Hàm này sẽ được gọi trong mỗi lượt lặp lại \r\n  * để cập nhật slideIndex mới cho Slideshow Gallery\r\n  */\r\n  runAutomatic() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Hàm này thuộc về React Component Lifecycle\r\n  * được gọi sau khi component này được render xong \r\n  * Trong đây, sẽ lưu lại reference cho container - this.containerElm\r\n  * Cập nhật lại chiều cao cho container - this.updateDimensions();\r\n  * Đăng ký sự kiện thay đổi kích thước - resize\r\n  * Kiểm tra nếu mode === \"automatic\" thì sẽ tạo mới một interval\r\n  * để thay đổi hình ảnh - this.runAutomatic()\r\n  * với giá trị timeout được truyền từ props hoặc mặc định là 5000 ms\r\n  */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".container\");\r\n    this.containerBottomElm = this.rootElm.querySelector(\".container-bottom\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    if (this.props.mode === \"automatic\") {\r\n      const timeout = this.props.timeout || 5000;\r\n\r\n      this.automaticInterval = setInterval(\r\n        () => this.runAutomatic(), \r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Hàm này cũng thuộc về React Component Lifecycle - \r\n  * được gọi khi component này bị xóa khỏi màn hình\r\n  * Lúc này, mình phải hủy bỏ sự kiện khi resize \r\n  * và xóa bỏ interval đã khai bảo bên trên để tránh leak memory.\r\n  */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n    if (this.automaticInterval) clearInterval(this.automaticInterval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lp-slideshow-gallery\">\r\n        <div className=\"container\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`slide ${this.state.slideIndex === index ? \"active\" : \"\"}`}\r\n                >\r\n                  <div className=\"number-text\">{`${index + 1} / ${this.props.input.length}`}</div>\r\n                  <img className=\"image\" src={image.src} alt={image.caption} />\r\n                  <div className=\"caption-text\">{image.caption}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n          <span className=\"prev\" onClick={this.backward}>&#10094;</span>\r\n          <span className=\"next\" onClick={this.forward}>&#10095;</span>\r\n        </div>\r\n\r\n        <div className=\"container-bottom\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <img\r\n                  key={index}\r\n                  src={image.src} \r\n                  alt={image.caption}\r\n                  className={`image ${this.state.slideIndex === index ? \"active\" : \"\"}`}\r\n                  onClick={() => this.setSlideIndex(index)}\r\n                  style={{\r\n                    width: `${1 / this.props.input.length * 100}%`,\r\n                    height: `100%`\r\n                  }}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport SlideshowGallery from './components/slideshow-gallery/slideshow-gallery';\r\nimport img1 from './images/01.jpg';\r\nimport img2 from './images/02.jpg';\r\nimport img3 from './images/03.jpg';\r\nimport img4 from './images/04.jpg';\r\nimport img5 from './images/05.jpg';\r\nimport img6 from './images/06.jpg';\r\n\r\nconst collection = [\r\n  { src: img1, caption: \"Caption one\" },\r\n  { src: img2, caption: \"Caption two\" },\r\n  { src: img3, caption: \"Caption three\" },\r\n  { src: img4, caption: \"Caption four\" },\r\n  { src: img5, caption: \"Caption five\" },\r\n  { src: img6, caption: \"Caption six\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Slideshow Gallery</h2>\r\n        \r\n        <SlideshowGallery\r\n          input={collection}  \r\n          ratio={`3:2`}\r\n          mode={`manual`}\r\n        />\r\n\r\n        <SlideshowGallery\r\n          input={collection}  \r\n          ratio={`3:2`}\r\n          mode={`automatic`}\r\n          timeout={`3000`}\r\n        />\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './modal-image.css';\r\n\r\nexport default class ModalImage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước. \r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n  }\r\n\r\n  /** \r\n   * Hiển thị Modal Image bằng cách set giá trị \r\n   * cho thuộc tính display của style, \r\n   * của phần tử đóng vai trò là Modal Image là \"initial\",\r\n   * để hiển thị nó\r\n  */\r\n  showModal() {\r\n    this.modalElm.style.display = \"initial\";\r\n  }\r\n\r\n  /** \r\n   * Ẩn ảnh Modal Image bằng cách set giá trị\r\n   * cho thuộc tính display của style,\r\n   * của phần tử đóng vai trò là Modal Image là \"none\",\r\n   * để ẩn nó đi\r\n  */\r\n  hideModal() {\r\n    this.modalElm.style.display = \"none\";\r\n  }\r\n\r\n  /*\r\n  * Cập nhật chiều cao cho mỗi ảnh khi thay đổi kích thước màn hình\r\n  * Trong phần CSS, mình để mỗi ảnh có width = 100%,\r\n  * Nên dù kéo to hay thu nhỏ thì width vẫn bằng 100% kích thước parent.\r\n  * Nhưng chiều cao là giá trị tuyệt đối nên phải tính lại, \r\n  * dựa vào width và tỉ lệ this.ratioWH = width / height\r\n  */\r\n  updateDimensions() {\r\n    this.imageElm.style.height = `${this.imageElm.offsetWidth / this.ratioWH}px`;\r\n  }\r\n\r\n  /** \r\n   * Hàm này được gọi khi Modal Image đã render lên HTML.\r\n   * Trong này mình sẽ lưu lại DOM node ứng với các phần tử \r\n   *   + this.rootElm -> toàn bộ component\r\n   *   + this.imageElm -> phiên bản ảnh nhỏ, hiển thị lúc đầu\r\n   *   + this.modalElm -> phiên bản ảnh lớn, modal image\r\n   * \r\n   * Tiếp theo, gọi hàm this.updateDimensions() để cập nhật chiều cao\r\n   * cho ảnh nhỏ ban đầu.\r\n   * \r\n   * Và cuối cùng là đăng ký sự kiên resize màn hình, với hàm xử lý \r\n   * là updateDimensions(). Tức là mỗi khi thay đổi kích thước màn hình\r\n   * thì sẽ tính lại chiều cao.\r\n  */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.imageElm = this.rootElm.querySelector(\".image\");\r\n    this.modalElm = this.rootElm.querySelector(\".modal\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  /** \r\n   * Hàm này được gọi khi Component bị xóa khỏi HTML.\r\n   * Lúc này mình phải hủy bỏ sự kiện đã đăng ký lúc trước.\r\n  */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lp-modal-image\">\r\n        <img \r\n          className=\"image\" \r\n          src={this.props.src} \r\n          alt={this.props.alt} \r\n          onClick={this.showModal}\r\n        />\r\n        \r\n        <div className=\"modal\">\r\n          <span className=\"close\" onClick={this.hideModal}>&times;</span>\r\n          <img className=\"modal-content\" src={this.props.src} alt={this.props.alt + \" modal\"} />\r\n          <div className=\"caption\">{this.props.alt}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport ModalImage from './components/modal-image/modal-image';\r\nimport img8 from './images/08.jpg';\r\nimport img9 from './images/09.jpg';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Image Modal</h2>\r\n        <p>Click the image below to show the modal.</p>\r\n\r\n        <div \r\n          style={{\r\n            display: `flex`\r\n          }}\r\n        >\r\n          <ModalImage\r\n            src={img8}\r\n            alt={`This is one of beautiful girls`}\r\n            ratio={`3:2`}\r\n          />\r\n          <ModalImage\r\n            src={img9}\r\n            alt={`This is also one of beautiful girls`}\r\n            ratio={`3:2`}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './lightbox.css';\r\nimport SlideshowGallery from '../slideshow-gallery/slideshow-gallery';\r\n\r\nexport default class LightBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Tạo reference ứng với Slideshow Gallery\r\n    this.slideshowGallery = React.createRef();\r\n\r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước. \r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n  }\r\n\r\n  /** \r\n   * Hiển thị Slideshow Gallery như Modal \r\n   * bằng cách set giá trị cho thuộc tính visibility của style, \r\n   * của phần tử đóng vai trò là Modal là \"visible\" để hiển thị nó\r\n   * \r\n   * Ngoài ra, khi hiển thị Slidshow Gallery lên, \r\n   * mình phải gọi phương thức setSlideIndex() \r\n   * để xác định ảnh nào đang được active\r\n  */\r\n  showModal(index) {\r\n    this.slideshowGallery.current.setSlideIndex(index);\r\n    this.modalElm.style.visibility = \"visible\";\r\n  }\r\n\r\n  /** \r\n   * Ẩn phần tử Slideshow Gallery đi bằng cách set giá trị\r\n   * cho thuộc tính visibility của style,\r\n   * của phần tử đóng vai trò là Modal Image là \"hidden\",\r\n   * để ẩn nó đi\r\n  */\r\n  hideModal() {\r\n    this.modalElm.style.visibility = \"hidden\";\r\n  }\r\n\r\n  /*\r\n  * Cập nhật chiều cao cho mỗi ảnh khi thay đổi kích thước màn hình\r\n  * Trong phần CSS, mình để mỗi ảnh có width = 100%,\r\n  * Nên dù kéo to hay thu nhỏ thì width vẫn bằng 100% kích thước parent.\r\n  * Nhưng chiều cao là giá trị tuyệt đối nên phải tính lại, \r\n  * dựa vào width và tỉ lệ this.ratioWH = width / height\r\n  * \r\n  * Ngoài ra, số lượng ảnh ban đầu là this.props.input.length \r\n  * chứ không phải 1 ảnh nên mình phải chia cho this.props.input.length \r\n  */\r\n  updateDimensions() {\r\n    const height = this.containerElm.offsetWidth / this.props.input.length / this.ratioWH;\r\n    this.containerElm.style.height = `${height}px`;\r\n  }\r\n\r\n  /** \r\n   * Hàm này được gọi khi Lightbox đã render lên HTML.\r\n   * Trong này mình sẽ lưu lại DOM node ứng với các phần tử \r\n   *   + this.rootElm -> toàn bộ component\r\n   *   + this.containerElm -> container chứa các ảnh phiên bản nhỏ, hiển thị lúc đầu\r\n   *   + this.modalElm -> chứa thành phần là modal - slideshow gallery\r\n   * \r\n   * Tiếp theo, gọi hàm this.updateDimensions() để cập nhật chiều cao\r\n   * cho ảnh nhỏ ban đầu.\r\n   * \r\n   * Và cuối cùng là đăng ký sự kiên resize màn hình, với hàm xử lý \r\n   * là updateDimensions(). Tức là mỗi khi thay đổi kích thước màn hình\r\n   * thì sẽ tính lại chiều cao.\r\n  */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".container\");\r\n    this.modalElm = this.rootElm.querySelector(\".modal\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  /** \r\n   * Hàm này được gọi khi Component bị xóa khỏi HTML.\r\n   * Lúc này mình phải hủy bỏ sự kiện đã đăng ký lúc trước.\r\n  */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  /** \r\n   * Chú ý: thành phần bên trong phần Modal bây giờ không chỉ\r\n   * là một ảnh như Modal Image.\r\n   * \r\n   * Mà trong đó, mình truyền vào Slideshow Gallery Component\r\n  */\r\n  render() {\r\n    return (\r\n      <div className=\"lp-lightbox\">\r\n        <div className=\"container\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <div \r\n                  key={index}\r\n                  className=\"image-wrapper\" \r\n                  style={{ \r\n                    width: `${1 / this.props.input.length * 100}%`, \r\n                    height: `100%` \r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"image\"\r\n                    src={image.src}\r\n                    alt={image.caption}\r\n                    onClick={() => this.showModal(index)}\r\n                  />\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"modal\">\r\n          <span className=\"close\" onClick={this.hideModal}>&times;</span>\r\n          <div className=\"modal-content\">\r\n            <SlideshowGallery \r\n              ref={this.slideshowGallery}\r\n              input={this.props.input}  \r\n              ratio={this.props.ratio}\r\n              mode={`manual`}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport LightBox from './components/lightbox/lightbox';\r\nimport img8 from './images/08.jpg';\r\nimport img9 from './images/09.jpg';\r\nimport img10 from './images/10.jpg';\r\n\r\nconst collection = [\r\n  { src: img8, caption: \"Caption eight\" },\r\n  { src: img9, caption: \"Caption nine\" },\r\n  { src: img10, caption: \"Caption ten\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>LightBox</h2>\r\n        <p>Click on each image below to show the Slideshow Gallery.</p>\r\n\r\n        <LightBox \r\n          input={collection}  \r\n          ratio={`3:2`}\r\n        />\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tab-gallery.css';\r\n\r\nexport default class TabGallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /**\r\n     * State lưu thông tin ảnh sẽ được hiển thị trong tab content,\r\n     * bao gồm đường dẫn ảnh và caption của ảnh\r\n     */\r\n    this.state = {\r\n      imageSrc: \"\",\r\n      imageText: \"\",\r\n    }\r\n\r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước. \r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.showImage = this.showImage.bind(this);\r\n    this.hideImage = this.hideImage.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Điều khiển việc hiển thị ảnh, với đầu vào là object lưu thông tin\r\n   * của ảnh cần hiển thị\r\n   */\r\n  showImage(image) {\r\n    this.setState({\r\n      imageSrc: image.src,\r\n      imageText: image.caption,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Điều khiển việc ẩn ảnh đi, \r\n   * bằng cách cho đường dẫn ảnh về string rỗng.\r\n   */\r\n  hideImage() {\r\n    this.setState({\r\n      imageSrc: \"\",\r\n      imageText: \"\",\r\n    });\r\n\r\n    /**\r\n     * Khi set display thành none thì phần container \r\n     * phía dưới sẽ không chiếm diện tích,\r\n     * nên phải cập nhật lại kích thước của component\r\n     */\r\n    this.containerBottomElm.style.display = \"none\";\r\n    this.updateDimensions();\r\n  }\r\n\r\n  /**\r\n   * Cập nhật kích thước component\r\n   */\r\n  updateDimensions() {\r\n    const tabHeight = this.containerElm.offsetWidth / this.props.input.length / this.ratioWH;\r\n    this.containerElm.style.height = `${tabHeight}px`;\r\n\r\n    const bottomHeight = this.containerBottomElm.offsetWidth / this.ratioWH;\r\n    this.containerBottomElm.style.height = `${bottomHeight}px`;\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component đã render lên HTML xong,\r\n   * lúc này mình cần lưu lại DOM node ứng với các phần tử cần thiết.\r\n   * \r\n   * Đồng thời tính toán kích thước component và đăng ký\r\n   * sự kiện khi resize màn hình thì sẽ tính toán lại kích thước của component.\r\n   */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".container\");\r\n    this.containerBottomElm = this.rootElm.querySelector(\".container-bottom\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component bị xoá khỏi HTML,\r\n   * lúc này mình cần huỷ bỏ sự kiện đã đăng ký.\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component update,\r\n   * tức là khi click vào mỗi ảnh, mình sẽ hiển thị ảnh phía dưới,\r\n   * sau đó tính toán lại kích thước phù hợp.\r\n   */\r\n  componentDidUpdate() {\r\n    if (this.state.imageSrc !== \"\") {\r\n      this.containerBottomElm.style.display = \"block\";\r\n      this.updateDimensions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Giao diện của tab gallery sẽ gồm 2 phần chính.\r\n   * Phần div với tên class container sẽ hiển thị ảnh theo chiều ngang.\r\n   * \r\n   * Khi click vào mỗi ảnh thì phiên bản lớn hơn của ảnh sẽ hiển thị\r\n   * phía dưới, ứng với thẻ div với class container-bottom\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"lp-tab-gallery\">\r\n        <div className=\"container\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"image-wrapper\"\r\n                  style={{ \r\n                    width: `${1 / this.props.input.length * 100}%`, \r\n                    height: `100%` \r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"image\"\r\n                    src={image.src}\r\n                    alt={image.caption}\r\n                    onClick={() => this.showImage(image)}\r\n                  />\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"container-bottom\">\r\n          <img className=\"image\" src={this.state.imageSrc} alt={this.state.imageText} />\r\n          <span className=\"close-btn\" onClick={() => this.hideImage()}>&times;</span>\r\n          <div className=\"image-text\">{this.state.imageText}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport TabGallery from './components/tab-gallery/tab-gallery';\r\nimport img11 from './images/11.jpg';\r\nimport img12 from './images/12.jpg';\r\nimport img13 from './images/13.jpg';\r\n\r\nconst collection = [\r\n  { src: img11, caption: \"Caption eleven\" },\r\n  { src: img12, caption: \"Caption twelve\" },\r\n  { src: img13, caption: \"Caption thirteen\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Tab Gallery</h2>\r\n        <p>Click on each image below to show the corresponding image.</p>\r\n\r\n        <TabGallery \r\n          input={collection}  \r\n          ratio={`3:2`}\r\n        />\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './tab-content.css';\r\n\r\nexport default class TabContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Tạo ra một mảng để lưu ref của các tab content\r\n    this.refTabContents = [];\r\n    this.props.input.forEach(_ => {\r\n      this.refTabContents.push(React.createRef());\r\n    });\r\n\r\n    // Mặc định sẽ hiển thị tab đầu tiên, nên this.state.tabIndex = 0\r\n    this.state = {\r\n      tabIndex: 0\r\n    }\r\n\r\n    this.changeTabIndex = this.changeTabIndex.bind(this);\r\n    this.updateTabContent = this.updateTabContent.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Thay đổi tabIndex khi người dùng thay đổi tab\r\n   */\r\n  changeTabIndex(index) {\r\n    this.setState({\r\n      tabIndex: index\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cập nhật tab content \r\n   * \r\n   * Hàm này sẽ duyệt từng tab content,\r\n   *  + Nếu this.state.tabIndex trùng với index của tab => tab đó được active\r\n   *    => gán maxHeight cho nó bằng với giá trị scrollHeight - độ cao cần thiết \r\n   *    => và gán opacity = 1 để hiển thị nó\r\n   *  + Ngược lại, khi nó không được active\r\n   *    => gán maxHeight cho nó bằng 0. \r\n   *    => mà trong file css mình đã set overflow = hidden nên nó sẽ không hiển thị\r\n   *    => tuy nhiên nó vẫn có padding và border\r\n   *    => nên cần set opacity = 0 để ẩn nốt border đi\r\n   */\r\n  updateTabContent() {\r\n    this.refTabContents.forEach((refTab, index) => {\r\n      const elmTab = refTab.current;\r\n\r\n      if (this.state.tabIndex === index) {\r\n        elmTab.style.maxHeight = elmTab.scrollHeight + \"px\"; \r\n        elmTab.style.opacity = \"1\";\r\n      }\r\n      else {\r\n        elmTab.style.maxHeight = null;\r\n        elmTab.style.opacity = \"0\";  \r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Hàm này được gọi khi TabContent được render xong.\r\n  * Khi đó mình sẽ cập nhật TabContent - updateTabContent lần đầu tiên.\r\n  * Sau đó, đăng ký sự kiện khi thay đổi kích thước màn hình sẽ cập nhật lại TabContent,\r\n  * (thực chất là mình chỉ cập nhật lại maxHeight)\r\n  */\r\n  componentDidMount() {\r\n    this.updateTabContent();\r\n    window.addEventListener(\"resize\", this.updateTabContent);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi TabContent bị huỷ.\r\n   * Lúc này cần huỷ đăng ký sự kiện resize lúc trước để tránh leak memory\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateTabContent);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi mỗi khi this.state.tabIndex thay đổi.\r\n   * Tức là mình cần phải cập nhật lại nội dung của Tab content ứng với từng tab\r\n   */\r\n  componentDidUpdate() {\r\n    this.updateTabContent();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lp-tab-content\">\r\n        <div className=\"tab\">\r\n          {\r\n            this.props.input.map((tabContent, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  className={`tab-link ${this.state.tabIndex === index ? \"active\" : \"\"}`}\r\n                  onClick={() => this.changeTabIndex(index)}\r\n                >\r\n                  {tabContent.title}\r\n                </button>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"tab-content-wrapper\">\r\n          {\r\n            this.props.input.map((tabContent, index) => {\r\n              return (\r\n                <div\r\n                  ref={this.refTabContents[index]}\r\n                  key={index}\r\n                  className={`tab-content`}\r\n                >\r\n                  {tabContent.content}\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport TabContent from './components/tab-content/tab-content';\r\n\r\n// Kết hợp Slideshow trong Collapsible Content\r\nimport Slideshow from './components/slideshow/slideshow';\r\nimport img1 from './images/01.jpg';\r\nimport img2 from './images/02.jpg';\r\nimport img3 from './images/03.jpg';\r\n\r\n// Kết hợp Modal Image trong Collapsible Content\r\nimport ModalImage from './components/modal-image/modal-image';\r\n\r\n// Kết hợp Lightbox trong Collapsible Content\r\nimport LightBox from './components/lightbox/lightbox';\r\n\r\nconst collection = [\r\n  { src: img1, caption: \"Caption one\" },\r\n  { src: img2, caption: \"Caption two\" },\r\n  { src: img3, caption: \"Caption three\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    const contents = [\r\n      {\r\n        title: \"Section1\",\r\n        content:\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n          </p>\r\n      },\r\n      {\r\n        title: \"Section2\",\r\n        content:\r\n          <div>\r\n            <h2> Slideshow </h2>\r\n            <Slideshow\r\n              input={collection}\r\n              ratio={`3:2`}\r\n              mode={`manual`}\r\n            />\r\n          </div>\r\n      },\r\n      {\r\n        title: \"Section3\",\r\n        content:\r\n          <div>\r\n            <h2>Image Modal</h2>\r\n            <p>Click the image below to show the modal.</p>\r\n            <ModalImage\r\n              src={img2}\r\n              alt={`This is one of beautiful girls`}\r\n              ratio={`3:2`}\r\n            />\r\n          </div>\r\n      },\r\n      {\r\n        title: \"Section 4\",\r\n        content:\r\n          <div>\r\n            <h2>LightBox</h2>\r\n            <p>Click on each image below to show the modal.</p>\r\n\r\n            <LightBox\r\n              input={collection}\r\n              ratio={`3:2`}\r\n            />\r\n          </div>\r\n      }\r\n    ]\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Tab Content</h2>\r\n        <p>Click on each section to change the tab's content</p>\r\n\r\n        <TabContent input={contents} />\r\n\r\n        \r\n        <div>\r\n          <p>\r\n            Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n            Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n          </p>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './collapsible-content.css';\r\n\r\nexport default class CollapsibleContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // State isActive để quản lý xem CollapsibleContent có đang active không.\r\n    // Nếu Active thì content sẽ được hiển thị, ngược lại thì không.\r\n    // Nếu người dùng không truyền thuộc tính isActive vào, \r\n    // thì mặc định this.state.isActive là false\r\n    this.state = {\r\n      isActive: this.props.isActive || false\r\n    }\r\n\r\n    this.toggleCollapseContent = this.toggleCollapseContent.bind(this);\r\n    this.updateContentMaxHeight = this.updateContentMaxHeight.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi người dùng click vào khu vực button title.\r\n   * Khi đó trạng thái của this.state.isActive sẽ bị lật ngược lại.\r\n   * Nếu nó là true => false,\r\n   * Nếu nó là false => true\r\n   */\r\n  toggleCollapseContent() {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cập nhật maxHeight của khu vực content,\r\n   * Nếu this.state.isActive là true thì khu vực content có maxHeight = giá trị thực tế nó cần.\r\n   * Nếu this.state.isActive là false thì khu vực content có maxHeight = 0 => content bị ẩn.\r\n   */\r\n  updateContentMaxHeight() {\r\n    if (this.state.isActive) {\r\n      this.panelContent.style.maxHeight = this.panelContent.scrollHeight + \"px\";\r\n    } else {\r\n      this.panelContent.style.maxHeight = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi sau khi Collapsible content được render lên.\r\n   * Trong này, mình sẽ lưu lại DOM node ứng với khu vực content là this.panelContent.\r\n   * Sau đó, cập nhật lại maxHeight cho nó, tuỳ thuộc vào giá trị this.state.isActive.\r\n   * Đồng thời, mình đăng ký sự kiện khi resize màn hình,\r\n   * để gọi hàm updateContentMaxHeight => cập nhật lại maxHeight cho content\r\n   */\r\n  componentDidMount() {\r\n    this.root = ReactDOM.findDOMNode(this);\r\n    this.panelContent = this.root.querySelector(\".content\");\r\n    \r\n    this.updateContentMaxHeight();\r\n    window.addEventListener(\"resize\", this.updateContentMaxHeight);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi Collapsible Content bị xoá.\r\n   * Khi đó, mình phải huỷ đăng ký sự kiện resize lúc trước.\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateContentMaxHeight);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi mỗi khi this.state.isActive thay đổi.\r\n   * Trong này, mình phải gọi hàm this.updateContentMaxHeight(),\r\n   * để cập nhật lại maxHeight cho content, ứng với trường hợp đóng hoặc mở\r\n   */\r\n  componentDidUpdate() {\r\n    this.updateContentMaxHeight();\r\n  }\r\n\r\n  /**\r\n   * Giao diện cho Collapsible Content\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"lp-collapsible-content\">\r\n        <div\r\n          className={`title ${this.state.isActive ? \"active\" : \"\"}`}\r\n          onClick={this.toggleCollapseContent}\r\n        >\r\n          {this.props.title}\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport CollapsibleContent from './components/collapsible-content/collapsible-content';\r\n\r\n// Kết hợp Slideshow trong Collapsible Content\r\nimport Slideshow from './components/slideshow/slideshow';\r\nimport img1 from './images/01.jpg';\r\nimport img2 from './images/02.jpg';\r\nimport img3 from './images/03.jpg';\r\n\r\n// Kết hợp Modal Image trong Collapsible Content\r\nimport ModalImage from './components/modal-image/modal-image';\r\n\r\n// Kết hợp Lightbox trong Collapsible Content\r\nimport LightBox from './components/lightbox/lightbox';\r\n\r\nconst collection = [\r\n  { src: img1, caption: \"Caption one\" },\r\n  { src: img2, caption: \"Caption two\" },\r\n  { src: img3, caption: \"Caption three\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Collapsible Content</h2>\r\n        <p>Click on each section to toggle between hiding and showing the content</p>\r\n\r\n        <CollapsibleContent title={`Section 1`} isActive={true}>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n          </p>\r\n        </CollapsibleContent>\r\n\r\n        <CollapsibleContent title={`Section 2`}>\r\n          <h2> Slideshow </h2>\r\n          <Slideshow\r\n            input={collection}\r\n            ratio={`3:2`}\r\n            mode={`manual`}\r\n          />\r\n        </CollapsibleContent>\r\n\r\n        <CollapsibleContent title={`Section 3`}>\r\n          <h2>Image Modal</h2>\r\n          <p>Click the image below to show the modal.</p>\r\n          <ModalImage\r\n            src={img2}\r\n            alt={`This is one of beautiful girls`}\r\n            ratio={`3:2`}\r\n          />\r\n        </CollapsibleContent>\r\n\r\n        <CollapsibleContent title={`Section 4`}>\r\n          <h2>LightBox</h2>\r\n          <p>Click on each image below to show the modal.</p>\r\n\r\n          <LightBox\r\n            input={collection}\r\n            ratio={`3:2`}\r\n          />\r\n        </CollapsibleContent>\r\n\r\n        <div>\r\n          <p>\r\n            Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n            Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './draggable-element.css';\r\n\r\n// Kiểm tra xem 1 element có vượt quá chiều rộng của container không\r\nconst isOverflowedX = elm => elm.scrollWidth > elm.clientWidth;\r\n\r\n// Kiểm tra xem 1 element có vượt quá chiều cao của container không\r\nconst isOverflowedY = elm => elm.scrollHeight > elm.clientHeight;\r\n\r\n/** \r\n* Nếu 1 element có chiều rộng vượt quá container,\r\n* thì sẽ thêm scrollbar theo chiều X\r\n*/\r\nconst addScrollbarXIfNeeded = elm => {\r\n  if (isOverflowedX(elm)) elm.style.setProperty(\"overflow-x\", \"scroll\");\r\n  else elm.style.setProperty(\"overflow-x\", \"initial\");\r\n}\r\n\r\n/** \r\n* Nếu 1 element có chiều cao vượt quá container,\r\n* thì sẽ thêm scrollbar theo chiều Y\r\n*/\r\nconst addScrollbarYIfNeeded = elm => {\r\n  if (isOverflowedY(elm)) elm.style.setProperty(\"overflow-y\", \"scroll\");\r\n  else elm.style.setProperty(\"overflow-y\", \"initial\");\r\n}\r\n\r\n/**\r\n * Cross-browser để xác định clientWidth cho IE8 trở về trước\r\n * Draggable Element chỉ cho phép di chuyển phần tử ở trong phạm vi màn hình\r\n */\r\nconst maxWidth = window.innerWidth ||\r\n  document.documentElement.clientWidth ||\r\n  document.body.clientWidth;\r\n\r\n/**\r\n * Cross-browser để xác định clientHeight cho IE8 trở về trước\r\n * Draggable Element chỉ cho phép di chuyển phần tử ở trong phạm vi màn hình\r\n */\r\nconst maxHeight = window.innerHeight ||\r\n  document.documentElement.clientHeight ||\r\n  document.body.clientHeight;\r\n\r\n/**\r\n * React Component cho phép di chuyển 1 phần tử trong phạm vi màn hình.\r\n * Hiện tại chỉ support di chuyển trên Desktop, chưa support trên điện thoại\r\n */\r\nexport default class DraggableElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Bind các phương thức để sử dụng phía dưới\r\n    this.dragMouseDown = this.dragMouseDown.bind(this);\r\n    this.elementDrag = this.elementDrag.bind(this);\r\n    this.closeDragElement = this.closeDragElement.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component render xong lên màn hình\r\n   */\r\n  componentDidMount() {\r\n    // Lấy ra DOM node của đối tượng root - toàn bộ component\r\n    this.root = ReactDOM.findDOMNode(this);\r\n\r\n    // Lấy ra DOM node của content - vùng chứa nội dung\r\n    this.content = this.root.querySelector(\".content\");\r\n\r\n    // Lấy ra DOM node của header - vùng cho phép click chuột\r\n    // để di chuyển\r\n    this.header = this.root.querySelector(\".header\");\r\n\r\n    // Tính lại chiều cao cho vùng content,\r\n    // chiều rộng của content luôn = 100% giá trị của root\r\n    this.content.style.height = `${this.root.offsetHeight - this.header.offsetHeight}px`;\r\n\r\n    // Sau đó, thêm scrollbar vào content,\r\n    // nếu nội dung vượt quá kích thước của vùng\r\n    addScrollbarXIfNeeded(this.content);\r\n    addScrollbarYIfNeeded(this.content);\r\n\r\n    // Đăng ký sự kiện khi người dùng click chuột vào header\r\n    this.header.addEventListener(\"mousedown\", this.dragMouseDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Huỷ đăng ký sự kiện khi người dùng click chuột vào header\r\n    this.header.removeEventListener(\"mousedown\", this.dragMouseDown);\r\n  }\r\n\r\n  /**\r\n   * Hàm này xử lý khi người dùng click chuột vào header,\r\n   * do đó đối số e - tương ứng với đối tượng MouseEvent \r\n   */\r\n  dragMouseDown(e) {\r\n    // Huỷ bỏ tất cả các xử lý mặc định, nếu có\r\n    e.preventDefault();\r\n\r\n    // Lấy ra vị trí click chuột đầu tiên,\r\n    // Mục đích là khi người dùng di chuyển, mình sẽ tính vị trí chuột mới.\r\n    // Sau đó, lấy giá vị trí mới trừ đi giá trị vị trí cũ,\r\n    // sẽ tính được khoảng di chuyển của chuột \r\n    // => cập nhật lại toạ độ cho Component\r\n    this.startX = e.clientX;\r\n    this.startY = e.clientY;\r\n\r\n    // Đăng ký sự kiện mousemove, để xử lý khi di chuyển chuột\r\n    window.addEventListener(\"mousemove\", this.elementDrag);\r\n\r\n    // Đăng ký sự kiện mouseup, để xử lý khi người dùng nhả chuột.\r\n    // Lúc này, đồng nghĩa với việc dừng di chuyển Component.\r\n    window.addEventListener(\"mouseup\", this.closeDragElement);\r\n  }\r\n\r\n  /**\r\n   * Xử lý khi người dùng đã click chuột vào header của component\r\n   * và đang di chuyển => đối số e - là MouseEvent\r\n   */\r\n  elementDrag(e) {\r\n    // Huỷ bỏ tất cả các xử lý mặc định, nếu có\r\n    e.preventDefault();\r\n\r\n    // Lúc này, mình cũng tính được vị trí của chuột hiện tại,\r\n    // chính là e.clientX và e.clientY.\r\n    // Sau đó, lấy giá trị cũ (this.startX, this.startY) trừ đi\r\n    // giá trị mới là tính được khoảng di chuyển. \r\n    const deltaX = this.startX - e.clientX;\r\n    const deltaY = this.startY - e.clientY;\r\n\r\n    // Tính toán vị trí top, left, right, bottom mới của component\r\n    const newTop = this.root.offsetTop - deltaY;\r\n    const newLeft = this.root.offsetLeft - deltaX;\r\n    const newRight = newLeft + this.root.offsetWidth;\r\n    const newBottom = newTop + this.root.offsetHeight;\r\n\r\n    // Kiểm tra thử xem ứng với vị trí mới này,\r\n    // component có nằm trong chiều rộng màn hình không, \r\n    // Nếu có, thì mới cập nhật vị trí mới\r\n    if (newLeft >= 0 && newLeft <= maxWidth &&\r\n      newRight >= 0 && newRight <= maxWidth) {\r\n\r\n      this.startX = e.clientX;\r\n      this.root.style.left = `${newLeft}px`;\r\n    }\r\n\r\n    // Kiểm tra thử xem ứng với vị trí mới này,\r\n    // component có nằm trong chiều cao màn hình không, \r\n    // Nếu có, thì mới cập nhật vị trí mới\r\n    if (newTop >= 0 && newTop <= maxHeight &&\r\n      newBottom >= 0 && newBottom <= maxHeight) {\r\n\r\n      this.startY = e.clientY;\r\n      this.root.style.top = `${newTop}px`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hàm này xử lý khi người dùng nhả chuột - ngừng di chuyển,\r\n   * Mình phải huy các sự kiện mouseup và mousemove đã đăng ký\r\n   */\r\n  closeDragElement() {\r\n    window.removeEventListener(\"mouseup\", this.closeDragElement);\r\n    window.removeEventListener(\"mousemove\", this.elementDrag);\r\n  }\r\n\r\n  render() {\r\n    const title = this.props.title || \"Click here to move\";\r\n    const elemStyle = {\r\n      width: `${this.props.width || 300}px`,\r\n      height: `${this.props.height || 300}px`,\r\n      top: `${this.props.top || 0}px`,\r\n      left: `${this.props.left || 0}px`\r\n    }\r\n\r\n    return (\r\n      <div className=\"lp-draggable-element\" style={elemStyle}>\r\n        <div className=\"header\">{title}</div>\r\n        <div className=\"content\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport DraggableElement from './components/draggable-element/draggable-element';\r\n\r\n// Kết hợp Modal Image trong DraggableElement\r\nimport ModalImage from './components/modal-image/modal-image';\r\n\r\n// Kết Slideshow trong DraggableElement\r\nimport Slideshow from './components/slideshow/slideshow';\r\n\r\nimport img1 from './images/01.jpg';\r\nimport img2 from './images/02.jpg';\r\nimport img3 from './images/03.jpg';\r\nimport img4 from './images/04.jpg';\r\nimport img5 from './images/05.jpg';\r\nimport img6 from './images/06.jpg';\r\n\r\nconst collection = [\r\n  { src: img1, caption: \"Caption one\" },\r\n  { src: img2, caption: \"Caption two\" },\r\n  { src: img3, caption: \"Caption three\" },\r\n  { src: img4, caption: \"Caption four\" },\r\n  { src: img5, caption: \"Caption five\" },\r\n  { src: img6, caption: \"Caption six\" },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Draggable Element</h2>\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n\r\n        <DraggableElement\r\n          title={`Click here to move`}\r\n          width={`400`}\r\n          height={`250`}\r\n          top={`150`}\r\n          left={`200`}\r\n        >\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n          </p>\r\n        </DraggableElement>\r\n\r\n        <DraggableElement\r\n          title={`Click here to move`}\r\n          width={`400`}\r\n          height={`450`}\r\n          top={`350`}\r\n          left={`300`}\r\n        >\r\n          <h3>Slideshow</h3>\r\n          <Slideshow\r\n            input={collection}\r\n            ratio={`3:2`}\r\n            mode={`manual`}\r\n          />\r\n        </DraggableElement>\r\n\r\n        <DraggableElement\r\n          title={`Click here to move`}\r\n          width={`400`}\r\n          height={`400`}\r\n          top={`150`}\r\n          left={`800`}\r\n        >\r\n          <h3>Modal Image</h3>\r\n          <ModalImage\r\n            src={img6}\r\n            alt={`This is one of beautiful girls`}\r\n            ratio={`3:2`}\r\n          />\r\n        </DraggableElement>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './draggable-note.css';\r\n\r\n/**\r\n * Cross-browser để xác định clientWidth cho IE8 trở về trước\r\n * Draggable Note chỉ cho phép di chuyển phần tử ở trong phạm vi màn hình\r\n */\r\nconst maxWidth = window.innerWidth ||\r\n  document.documentElement.clientWidth ||\r\n  document.body.clientWidth;\r\n\r\n/**\r\n * Cross-browser để xác định clientHeight cho IE8 trở về trước\r\n * Draggable Note chỉ cho phép di chuyển phần tử ở trong phạm vi màn hình\r\n */\r\nconst maxHeight = window.innerHeight ||\r\n  document.documentElement.clientHeight ||\r\n  document.body.clientHeight;\r\n\r\n/**\r\n * React Component cho phép di chuyển 1 phần tử trong phạm vi màn hình.\r\n * Hiện tại chỉ support di chuyển trên Desktop, chưa support trên điện thoại\r\n */\r\nexport default class DraggableNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Bind các phương thức để xử lý drag\r\n    this.dragMouseDown = this.dragMouseDown.bind(this);\r\n    this.elementDrag = this.elementDrag.bind(this);\r\n    this.closeDragElement = this.closeDragElement.bind(this);\r\n\r\n    // Bind các phương thức để resize content\r\n    this.resizeMouseDown = this.resizeMouseDown.bind(this);\r\n    this.contentResize = this.contentResize.bind(this);\r\n    this.closeResizeContent = this.closeResizeContent.bind(this);\r\n    this.contentChange = this.contentChange.bind(this);\r\n    this.updateContentSize = this.updateContentSize.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Tính lại chiều rộng, cao cho vùng content,\r\n   * chiều rộng của content luôn = 100% giá trị của root\r\n   */\r\n  updateContentSize() {\r\n    this.content.style.width = `${this.root.offsetWidth}px`;\r\n    this.content.style.height = `${this.root.offsetHeight - this.header.offsetHeight}px`;\r\n  }\r\n\r\n  /**\r\n   * Cập nhật khi component update\r\n   */\r\n  componentDidUpdate() {\r\n    this.updateContentSize();\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component render xong lên màn hình\r\n   */\r\n  componentDidMount() {\r\n    // Lấy ra DOM node của đối tượng root - toàn bộ component\r\n    this.root = ReactDOM.findDOMNode(this);\r\n\r\n    // Lấy ra DOM node của content - vùng chứa nội dung\r\n    this.content = this.root.querySelector(\".content\");\r\n\r\n    // Lấy ra DOM node của header - vùng cho phép click chuột để di chuyển\r\n    this.header = this.root.querySelector(\".header\");\r\n\r\n    // update kích thước thực tế cho phần content\r\n    this.updateContentSize();\r\n\r\n    // Đăng ký sự kiện khi người dùng click chuột vào header\r\n    this.header.addEventListener(\"mousedown\", this.dragMouseDown);\r\n\r\n    // Đăng ký sự kiện khi người dùng resize textarea,\r\n    // Ở đây, mình phải dùng sự kiện mouseup vì sự kiện resize không bắt được.\r\n    this.content.addEventListener(\"mousedown\", this.resizeMouseDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Huỷ đăng ký sự kiện khi người dùng click chuột vào header\r\n    this.header.removeEventListener(\"mousedown\", this.dragMouseDown);\r\n\r\n    // Huỷ Đăng ký sự kiện khi người dùng resize textarea\r\n    this.content.removeEventListener(\"mousedown\", this.resizeMouseDown);\r\n  }\r\n\r\n  /**\r\n   * Hàm này xử lý khi người dùng click chuột vào header,\r\n   * do đó đối số e - tương ứng với đối tượng MouseEvent \r\n   */\r\n  dragMouseDown(e) {\r\n    // Huỷ bỏ tất cả các xử lý mặc định, nếu có\r\n    e.preventDefault();\r\n\r\n    // Lấy ra vị trí click chuột đầu tiên,\r\n    // Mục đích là khi người dùng di chuyển, mình sẽ tính vị trí chuột mới.\r\n    // Sau đó, lấy giá vị trí mới trừ đi giá trị vị trí cũ,\r\n    // sẽ tính được khoảng di chuyển của chuột \r\n    // => cập nhật lại toạ độ cho Component\r\n    this.startX = e.clientX;\r\n    this.startY = e.clientY;\r\n\r\n    // Đăng ký sự kiện mousemove, để xử lý khi di chuyển chuột\r\n    window.addEventListener(\"mousemove\", this.elementDrag);\r\n\r\n    // Đăng ký sự kiện mouseup, để xử lý khi người dùng nhả chuột.\r\n    // Lúc này, đồng nghĩa với việc dừng di chuyển Component.\r\n    window.addEventListener(\"mouseup\", this.closeDragElement);\r\n  }\r\n\r\n  /**\r\n   * Xử lý khi người dùng đã click chuột vào header của component\r\n   * và đang di chuyển => đối số e - là MouseEvent\r\n   */\r\n  elementDrag(e) {\r\n    // Huỷ bỏ tất cả các xử lý mặc định, nếu có\r\n    e.preventDefault();\r\n\r\n    // Lúc này, mình cũng tính được vị trí của chuột hiện tại,\r\n    // chính là e.clientX và e.clientY.\r\n    // Sau đó, lấy giá trị cũ (this.startX, this.startY) trừ đi\r\n    // giá trị mới là tính được khoảng di chuyển. \r\n    const deltaX = this.startX - e.clientX;\r\n    const deltaY = this.startY - e.clientY;\r\n\r\n    // Tính toán vị trí top, left, right, bottom mới của component\r\n    const newTop = this.root.offsetTop - deltaY;\r\n    const newLeft = this.root.offsetLeft - deltaX;\r\n    const newRight = newLeft + this.root.offsetWidth;\r\n    const newBottom = newTop + this.root.offsetHeight;\r\n\r\n    let left = this.root.style.left;\r\n    let top = this.root.style.top;\r\n\r\n    // Kiểm tra thử xem ứng với vị trí mới này,\r\n    // component có nằm trong chiều rộng màn hình không, \r\n    // Nếu có, thì mới cập nhật vị trí mới\r\n    if (newLeft >= 0 && newLeft <= maxWidth &&\r\n      newRight >= 0 && newRight <= maxWidth) {\r\n\r\n      this.startX = e.clientX;\r\n      left = newLeft;\r\n    }\r\n\r\n    // Kiểm tra thử xem ứng với vị trí mới này,\r\n    // component có nằm trong chiều cao màn hình không, \r\n    // Nếu có, thì mới cập nhật vị trí mới\r\n    if (newTop >= 0 && newTop <= maxHeight &&\r\n      newBottom >= 0 && newBottom <= maxHeight) {\r\n\r\n      this.startY = e.clientY;\r\n      top = newTop;\r\n    }\r\n\r\n    // Cập nhật lại vị trí left, top cho Component\r\n    this.root.style.left = `${left}px`;\r\n    this.root.style.top = `${top}px`;\r\n\r\n    // Nếu người dùng truyền vào hàm handleDataChange,\r\n    // thì mình sẽ gọi để update state ở thằng cha nó\r\n    if (this.props.handleDataChange)\r\n      this.props.handleDataChange(this.props.id, { left, top });\r\n  }\r\n\r\n  /**\r\n   * Hàm này xử lý khi người dùng nhả chuột - ngừng di chuyển,\r\n   * Mình phải huỷ các sự kiện mouseup và mousemove đã đăng ký\r\n   */\r\n  closeDragElement() {\r\n    window.removeEventListener(\"mouseup\", this.closeDragElement);\r\n    window.removeEventListener(\"mousemove\", this.elementDrag);\r\n  }\r\n\r\n  /**\r\n   * Xử lý khi người dùng click vào khu vực textarea để resize\r\n   */\r\n  resizeMouseDown() {\r\n    window.addEventListener(\"mousemove\", this.contentResize);\r\n    window.addEventListener(\"mouseup\", this.closeResizeContent);\r\n  }\r\n\r\n  /**\r\n   * Hàm này mục đích để kiểm tra phần textarea khi resize, \r\n   * nhưng khi đăng ký sự kiện là mouseup.\r\n   */\r\n  contentResize() {\r\n    const width = this.content.offsetWidth;\r\n    const height = this.content.offsetHeight + this.header.offsetHeight;\r\n\r\n    this.root.style.width = `${width}px`;\r\n    this.root.style.height = `${height}px`;\r\n\r\n    // Nếu người dùng truyền vào hàm handleDataChange,\r\n    // thì mình sẽ gọi để update state ở thằng cha nó\r\n    if (this.props.handleDataChange)\r\n      this.props.handleDataChange(this.props.id, { width, height });\r\n  }\r\n\r\n  /**\r\n   * Khi resize kết thúc thì phải huỷ đăng ký các event lúc trước\r\n   */\r\n  closeResizeContent() {\r\n    window.removeEventListener(\"mouseup\", this.closeResizeContent);\r\n    window.removeEventListener(\"mousemove\", this.contentResize);\r\n  }\r\n\r\n  /**\r\n   * Xử lý khi nội dung note thay đổi\r\n   */\r\n  contentChange(event) {\r\n    // Nếu người dùng truyền vào hàm handleDataChange,\r\n    // thì mình sẽ gọi để update state ở thằng cha nó\r\n    if (this.props.handleDataChange)\r\n      this.props.handleDataChange(this.props.id, {\r\n        content: event.target.value\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const title = this.props.title || \"Click here to move\";\r\n    const elemStyle = {\r\n      width: `${this.props.width || 300}px`,\r\n      height: `${this.props.height || 300}px`,\r\n      top: `${this.props.top || 0}px`,\r\n      left: `${this.props.left || 0}px`\r\n    }\r\n\r\n    // Set giá trị z-index cho Component nếu người dùng truyền,\r\n    // ngược lại thì để giá trị mặc định mà trình duyệt cấp\r\n    // khi khởi tạo\r\n    if (this.props.zIndex !== undefined) elemStyle.zIndex = this.props.zIndex;\r\n\r\n    return (\r\n      <div className=\"lp-draggable-note\" style={elemStyle}>\r\n        <div className=\"header\">{title}</div>\r\n        {\r\n          this.props.handleDataChange ?\r\n            <textarea\r\n              className=\"content\"\r\n              value={this.props.content}\r\n              spellCheck=\"false\"\r\n              onChange={this.contentChange}\r\n            /> :\r\n            <textarea\r\n              className=\"content\"\r\n              defaultValue={this.props.content}\r\n              spellCheck=\"false\"\r\n            />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport DraggableNote from './components/draggable-note/draggable-note';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Draggable Note</h2>\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n\r\n        <DraggableNote\r\n          title={`Click here to move the note`}\r\n          width={`400`}\r\n          height={`250`}\r\n          top={`150`}\r\n          left={`350`}\r\n          content={''}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './sticky-notes.css';\r\nimport DraggableNote from '../draggable-note/draggable-note';\r\n\r\n/**\r\n * Xác định vị trí top, left của 1 element so với document\r\n * Tham khảo: https://bit.ly/2qBz4KK\r\n */\r\nfunction getOffset(el) {\r\n  const rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n}\r\n\r\nexport default class StickyNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Giá trị khởi tạo cho state của mỗi note\r\n    this.initialStateForEachNote = {\r\n      title: this.props.title || 'Click here to move',\r\n      width: this.props.width || 300,\r\n      height: this.props.height || 300,\r\n      top: this.props.top || 0,\r\n      left: this.props.left || 0,\r\n      content: this.props.content || ''\r\n    }\r\n\r\n    /**\r\n     * Biến đếm - đại diện cho id của mỗi note thêm vào,\r\n     * biến này sẽ tăng dần 1 đơn vị mỗi khi thêm một note\r\n     */\r\n    this.count = 0;\r\n\r\n    /**\r\n     * khởi tạo state cho Component, với:\r\n     *  + activeId: là giá trị id của note đang được active\r\n     *  + notes: là mảng lưu lại thông tin của các note\r\n     */\r\n    this.state = {\r\n      activeId: this.count,\r\n      notes: [\r\n        this.initNoteData()\r\n      ]\r\n    }\r\n\r\n    this.initNoteData = this.initNoteData.bind(this);\r\n    this.onAddNote = this.onAddNote.bind(this);\r\n    this.onRemoveNote = this.onRemoveNote.bind(this);\r\n    this.makeActive = this.makeActive.bind(this);\r\n    this.handleDataChange = this.handleDataChange.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Khởi tạo thông tin cho mỗi note mới được tạo lên, \r\n   * với offset là thông tin về vị trí của note hiện tại\r\n   * \r\n   * Mình dựa vào đó để tính vị trí của note mới thêm vào.\r\n   */\r\n  initNoteData(offset) {\r\n    // mỗi lần tạo một note mới thì this.count++\r\n    const noteData = {\r\n      ...this.initialStateForEachNote,\r\n      id: this.count++\r\n    };\r\n\r\n    if (offset) {\r\n      noteData.top = offset.top + 20;\r\n      noteData.left = offset.left + 20;\r\n    }\r\n\r\n    return noteData;\r\n  }\r\n\r\n  /**\r\n   * Xử lý event khi người dùng click vào dấu cộng (+) để thêm note\r\n   */\r\n  onAddNote(event) {\r\n    // Dừng việc lan truyền event, đảm bảo khi click vào dấu cộng (+) \r\n    // để thêm note mới thì chỉ hàm này được gọi, không lan truyền đến hàm khác\r\n    event.stopPropagation();\r\n\r\n    // Lấy vị trí của note hiện tại, từ đó tính toán vị trí của note mới\r\n    const offset = getOffset(event.target);\r\n    const noteData = this.initNoteData(offset);\r\n\r\n    // Cập nhật lại state\r\n    this.setState((state) => {\r\n      return {\r\n        activeId: noteData.id,\r\n        notes: [\r\n          ...state.notes,\r\n          noteData\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Xử lý khi người dùng click vào dầu nhân (x) để bỏ note.\r\n   * Trong đó, id là giá trị id - để phân biệt các note.\r\n   */\r\n  onRemoveNote(id) {\r\n    // Nếu hiện tại chỉ có 1 note thì không cho phép xoá note đi\r\n    if (this.state.notes.length === 1) return;\r\n\r\n    // Dùng filter lọc lấy các note có id khác với id cần xoá\r\n    this.setState((state) => {\r\n      const remainNotes = [...state.notes].filter((note) => {\r\n        return note.id !== id;\r\n      });\r\n\r\n      return {\r\n        activeId: remainNotes[remainNotes.length - 1].id,\r\n        notes: remainNotes\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Vì có nhiều note nên chúng có thể chồng lên nhau.\r\n   * Do đó, hàm này nhằm mục đích làm cho một note,\r\n   * ứng với id truyền vào được active - nghĩa là,\r\n   * nó sẽ được hiển thị lên trên so với các note còn lại.\r\n   * \r\n   * Cụ thể là note active sẽ có z-index = 1, các cái còn lại,\r\n   * sẽ có z-index = 0.\r\n   * \r\n   * Ngoài ra, chỉ update state nếu giá trị id mới cần update khác với \r\n   * giá trị hiện tại.\r\n   */\r\n  makeActive(id) {\r\n    if (this.state.activeId !== id) {\r\n      this.setState({\r\n        activeId: id\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi lên từ mỗi Draggable Note.\r\n   * Khi có một note ứng với id - thay đổi dữ liệu của nó,\r\n   * bao gồm một trong các loại: width, height, top, left, content,\r\n   * thì hàm này được gọi để cập nhật lại state cho component.\r\n   */\r\n  handleDataChange(id, data) {\r\n    this.setState((state) => {\r\n      const newNotes = [...state.notes].map(note => {\r\n        if (note.id === id) {\r\n          if (data.width !== undefined) note.width = data.width;\r\n          if (data.height !== undefined) note.height = data.height;\r\n          if (data.top !== undefined) note.top = data.top;\r\n          if (data.left !== undefined) note.left = data.left;\r\n          if (data.content !== undefined) note.content = data.content;\r\n        }\r\n\r\n        return note;\r\n      })\r\n\r\n      return {\r\n        notes: newNotes\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    /**\r\n     * Khác với Draggable bình thường, mỗi note của StickyNotes\r\n     * cần phải có thêm 2 button: (+) để thêm note và (x) để xoá note.\r\n     * Vì vậy, mình cần định nghĩa nó là header - \r\n     * để truyền vào thuộc tính title của DraggableNote\r\n     */\r\n    const header = (title, id) => (\r\n      <div className=\"lp-sticky-notes-header\">\r\n        <span className=\"add\" onClick={this.onAddNote}>+</span>\r\n        <span>{title}</span>\r\n        <span className=\"remove\" onClick={() => this.onRemoveNote(id)}>x</span>\r\n      </div>\r\n    )\r\n\r\n    /**\r\n     * Khác với việc sử dụng DraggableNote thông thường,\r\n     * phần này mình có nhiều DragableNote - mà cho phép thêm, xoá note.\r\n     * \r\n     * Vì vậy, mình cần truyền vào;\r\n     *   + id: để phân biệt note\r\n     *   + zIndex: để hiển thị lên top cái note đang được active\r\n     *   + handleDataChange: là hàm callback, để mỗi khi một note thay đổi\r\n     *      thì hàm này sẽ được gọi để cập nhật state.\r\n     */\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          this.state.notes.map((note, index) => {\r\n            return (\r\n              <div\r\n                onClick={() => this.makeActive(note.id)}\r\n                key={index}\r\n              >\r\n                <DraggableNote\r\n                  title={header(note.title, note.id)}\r\n                  width={note.width}\r\n                  height={note.height}\r\n                  top={note.top}\r\n                  left={note.left}\r\n                  content={note.content}\r\n                  zIndex={note.id === this.state.activeId ? 1 : 0}\r\n                  id={note.id}\r\n                  handleDataChange={this.handleDataChange}\r\n                />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport StickyNotes from './components/sticky-notes/sticky-notes';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Sticky Notes</h2>\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n\r\n        <StickyNotes\r\n          title={`Click here to move the note`}\r\n          width={`400`}\r\n          height={`250`}\r\n          top={`150`}\r\n          left={`350`}\r\n          content={''}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './countdown-timer.css';\r\n\r\nexport default class CountdownTimer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    // Xác định thời điểm cần đếm tới đó\r\n    this.countDownDate = new Date(this.props.timeDate).getTime();\r\n\r\n    this.updateTimer = this.updateTimer.bind(this);\r\n  }\r\n\r\n  updateTimer() {\r\n    // Lấy thời gian hiện tại\r\n    const now = new Date().getTime();\r\n\r\n    // Tính khoảng cách thời gian từ thời điểm cần đếm so với hiện tại\r\n    const distance = this.countDownDate - now;\r\n\r\n    // Tính days, hours, minutes and seconds\r\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    // Hiển thị kết quả \r\n    this.contentElm.innerText = `${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n\r\n    // Nếu distance < 0 => việc đếm kết thúc\r\n    // Lúc này cần huỷ interval đã cài đặt và set text là EXPIRED\r\n    if (distance < 0) {\r\n      clearInterval(this.counterInterval);\r\n      this.contentElm.innerText = \"EXPIRED\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi Countdown timer đã render lên màn hình\r\n   */\r\n  componentDidMount() {\r\n    // Lấy ra reference của đối tượng ứng với className=\"content\" \r\n    // để hiển thị timer\r\n    this.contentElm = ReactDOM.findDOMNode(this).querySelector(\".content\");\r\n\r\n    // Update timer ngay lần đầu tiên\r\n    this.updateTimer();\r\n\r\n    // Tạo interval (vòng lặp) để update timer sau mỗi 1000 ms (1 giây)\r\n    this.counterInterval = setInterval(\r\n      () => this.updateTimer(), \r\n      1000\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lp-countdown-timer\">\r\n        <span\r\n          className=\"content\"\r\n          style={{\r\n            fontSize: this.props.fontSize,\r\n            color: this.props.color\r\n          }}>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport CountdownTimer from './components/countdown-timer/countdown-timer';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Countdown Timer</h2>\r\n\r\n        <h3>New year: Jan 1, 2019 00:00:00</h3>\r\n        <CountdownTimer timeDate={`Jan 1, 2019 00:00:00`} fontSize={`3rem`} color={`#222`} />\r\n\r\n        <h3>Noel: Dec 24, 2018 11:05:12</h3>\r\n        <CountdownTimer timeDate={`Dec 24, 2018 11:05:12`} fontSize={`2.5rem`} color={`#3da4ab`} />\r\n\r\n        <h3>Time set: Nov 15, 2018 12:34:43</h3>\r\n        <CountdownTimer timeDate={`Nov 15, 2018 12:34:43`} fontSize={`2.2rem`} color={`#fc5d76`} />\r\n\r\n        <h3>Time set: Oct 30, 2018 11:25:00</h3>\r\n        <CountdownTimer timeDate={`Oct 30, 2018 11:25:00`} fontSize={`1.8rem`} color={`#f6cd61`} />\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tooltip.css';\r\n\r\nexport default class Tooltip extends React.Component {\r\n\r\n  /**\r\n   * Hàm này được gọi khi Tooltip đã render lên màn hình xong\r\n   * trong đây mình lấy ra DOM node ứng với Tooltip - ReactDOM.findDOMNode(this)\r\n   * rồi lấy ra style của nó - ReactDOM.findDOMNode(this).style;\r\n   * \r\n   * Tiếp theo, kiểm tra các thuộc tính mà người dùng truyền vào Tooltip\r\n   * với 4 giá trị support là:\r\n   *   + borderBottomStyle\r\n   *   + tooltipWidth\r\n   *   + tooltipBackgroundColor\r\n   *   + tooltipColor\r\n   * \r\n   * Nếu tồn tại thì set chúng cho các CSS variable tương ứng\r\n   * mà mình sử dụng trong file tooltip.css\r\n   */\r\n  componentDidMount() {\r\n    const rootStyle = ReactDOM.findDOMNode(this).style;\r\n    \r\n    if (this.props.borderBottomStyle) \r\n      rootStyle.setProperty('--border-bottom-style', this.props.borderBottomStyle);\r\n\r\n    if (this.props.tooltipWidth)\r\n      rootStyle.setProperty('--tooltip-width', this.props.tooltipWidth);\r\n\r\n    if (this.props.tooltipBackgroundColor)\r\n      rootStyle.setProperty('--tooltip-background-color', this.props.tooltipBackgroundColor);\r\n\r\n    if (this.props.tooltipColor)\r\n      rootStyle.setProperty('--tooltip-color', this.props.tooltipColor);\r\n  }\r\n\r\n  /**\r\n   * Render Tooltip\r\n   * \r\n   * Trong đó, giá trị của thuộc tính this.props.position có thể là: top, right, bottom, left\r\n   * được thêm vào className của tooltip.\r\n   * \r\n   * Qua đó, mình xây dựng style \r\n   * ứng với tooltip-text.top, tooltip-text.right, tooltip-text.bottom, tooltip-text.left\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"lp-tooltip\">\r\n        <div className=\"tooltip\">\r\n          <span>{this.props.text}</span>\r\n          <span className={`tooltip-text ${this.props.position}`}>{this.props.tooltipText}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Tooltip from './components/tooltip/tooltip';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Tooltip Text</h2>\r\n\r\n        <div style={{margin: `1rem auto`}}>\r\n          <Tooltip \r\n            text={\"Hover over me\"} \r\n            tooltipText={\"Tooltip text\"} \r\n            position={`top`} \r\n          />\r\n          <br/><br/>\r\n          \r\n          <Tooltip \r\n            text={\"Hover over me\"} \r\n            tooltipText={\"Tooltip text\"} \r\n            position={`right`} \r\n            borderBottomStyle={`1px dotted #fc5d76`} \r\n            tooltipWidth={`120px`}\r\n            tooltipBackgroundColor={`#fc5d76`}\r\n          />\r\n          <br/><br/>\r\n\r\n          <Tooltip \r\n            text={\"Hover over me\"} \r\n            tooltipText={\"Tooltip text Tooltip text Tooltip text Tooltip text Tooltip text\"} \r\n            position={`bottom`} \r\n            borderBottomStyle={`1px dotted #3da4ab`} \r\n            tooltipWidth={`220px`}\r\n            tooltipBackgroundColor={`#3da4ab`}\r\n          />\r\n          <br/><br/>\r\n\r\n          <Tooltip \r\n            text={\"Hover over me\"} \r\n            tooltipText={\"Tooltip text Tooltip text Tooltip text Tooltip text Tooltip text\"} \r\n            position={`left`} \r\n            borderBottomStyle={`1px dotted #f6cd61`} \r\n            tooltipWidth={`220px`}\r\n            tooltipBackgroundColor={`#f6cd61`}\r\n            tooltipColor={`#222`}\r\n          />\r\n          <br/><br/>\r\n        </div>\r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>.\r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './scroll-to-top.css';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  /**\r\n   * Tạo reference đến Component để sử dụng sau này\r\n   */\r\n  rootRef = React.createRef();\r\n\r\n  /**\r\n   * Hàm này xử lý khi người dùng click vào ScrollToTop button.\r\n   * Lúc này, mình sẽ thực hiện smooth-scroll lên trên top của window\r\n   */\r\n  handleClick = () => {\r\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' });\r\n  }\r\n\r\n  /**\r\n   * Hàm này dùng để check xem có hiển thị component hay không.\r\n   * \r\n   * Nếu người dùng truyền vào thuộc tính thresholdTop,\r\n   * mình mình sẽ lấy giá trị đó làm ngưỡng để hiển thị button.\r\n   * \r\n   * Mặc định, giá trị này sẽ là 100px (so với top).\r\n   * \r\n   * Nếu vị trí scrollTop hiện tại lớn hơn thresholdTop thì bắt đầu\r\n   * hiển thị ScrollToTop button, ngược lại thì ẩn nó đi.\r\n   */\r\n  showOrHideBackToTopButton = () => {\r\n    const thresholdTop = this.props.thresholdTop || 100;\r\n\r\n    if (document.body.scrollTop > thresholdTop ||\r\n      document.documentElement.scrollTop > thresholdTop) {\r\n      this.rootElm.style.display = 'block';\r\n    } else {\r\n      this.rootElm.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hàm này dùng để quản lý khi scroll window - hàm này đã được\r\n   * đăng ký trong componentDidMount phía dưới.\r\n   * \r\n   * Tư tưởng chung của hàm này là mỗi khi người dùng scroll windows,\r\n   * ngay sau khi dừng scroll được 100ms thì mình sẽ check vị trí scroll\r\n   * để quyết định xem có hiển thị hay ẩn ScrollToTop button.\r\n   */\r\n  handleScroll = () => {\r\n    /**\r\n     * Kiểm tra xem nếu this.debounceTimer khác undefined, \r\n     * nghĩa là người dùng đang scroll window. \r\n     * \r\n     * Lúc này mình sẽ clear nó đi - hay nói cách khác là huỷ bỏ\r\n     * hành động, không thực hiện nữa.\r\n     */\r\n    if (this.debounceTimer) {\r\n      window.clearTimeout(this.debounceTimer);\r\n    }\r\n\r\n    /**\r\n     * Đăng ký gọi hàm showOrHideBackToTopButton() với timeout là 100ms.\r\n     * Trong khoảng thời gian này, nếu người dùng vẫn scroll window,\r\n     * thì hành động tạm thời bị xoá bỏ, cho đến khi người dùng dừng scroll.\r\n     * \r\n     * 100ms sau hành động this.showOrHideBackToTopButton() sẽ được thực hiện.\r\n     */\r\n    this.debounceTimer = window.setTimeout(() => {\r\n      this.showOrHideBackToTopButton();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component đã render lên HTML, \r\n   * trong đây mình sẽ lưu lại DOM node ứng với component\r\n   * và đăng ký sự kiện khi scroll window\r\n   */\r\n  componentDidMount() {\r\n    this.rootElm = this.rootRef.current;\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  /**\r\n   * Hàm này được gọi khi component bị xoá bỏ,\r\n   * mình phải huỷ bỏ đăng ký sự kiện scroll trước đó.\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  render() {\r\n    const position = this.props.position || \"right\";\r\n    const elmStyle = {\r\n      backgroundColor: this.props.backgroundColor,\r\n      color: this.props.color\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={this.rootRef}\r\n        className={`lp-scroll-to-top ${position}`}\r\n        style={elmStyle}\r\n        onClick={this.handleClick}\r\n      >\r\n        &#8593;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollToTop;","import React from 'react';\r\nimport './App.css';\r\nimport ScrollToTop from './components/scroll-to-top/scroll-to-top';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Scroll To Top</h2>\r\n        <p>Scroll the page to the button, then test the Scroll-To-Top button.</p>\r\n        <p>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n          *<br/>\r\n        </p>\r\n\r\n        <ScrollToTop \r\n          position=\"right\" \r\n          backgroundColor=\"red\"\r\n          color=\"white\"  \r\n          thresholdTop=\"100\"\r\n        /> \r\n\r\n        <ScrollToTop \r\n          position=\"left\" \r\n          backgroundColor=\"red\"\r\n          color=\"white\"  \r\n          thresholdTop=\"100\"\r\n        /> \r\n\r\n        <div>\r\n          Made by <a href=\"https://about.phamvanlam.com/\">Lam Pham</a>. \r\n          Visit me at <a href=\"https://completejavascript.com/\">completejavascript.com</a>.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport SlideshowApp from './App.slideshow';\r\nimport SlideshowGalleryApp from './App.slideshow-gallery';\r\nimport ModalImageApp from './App.modal-image';\r\nimport LightBoxApp from './App.lightbox';\r\nimport TabGalleryApp from './App.tab-gallery';\r\nimport TabContentApp from './App.tab-content';\r\nimport CollapsibleContentApp from './App.collapse-content';\r\nimport DraggableElementApp from './App.draggable-element';\r\nimport DraggableNoteApp from './App.draggable-note';\r\nimport StickyNotesApp from './App.sticky-notes';\r\nimport CountdownTimerApp from './App.countdown-timer';\r\nimport TooltipApp from './App.tooltip';\r\nimport ScrollToTop from './App.scroll-to-top';\r\n\r\nconst Home = () => (\r\n  <div style={{\r\n    width: `100%`,\r\n    maxWidth: `640px`,\r\n    margin: `auto`,\r\n    padding: `15px`\r\n  }}>\r\n    <h2>Learn React by Example</h2>\r\n    <ul>\r\n      <li><Link to=\"/slideshow/\">Example #1: Slideshow</Link></li>\r\n      <li><Link to=\"/slideshow-gallery/\">Example #2: Slideshow Gallery</Link></li>\r\n      <li><Link to=\"/modal-image/\">Example #3: Modal Image</Link></li>\r\n      <li><Link to=\"/lightbox/\">Example #4: Lightbox</Link></li>\r\n      <li><Link to=\"/tab-gallery/\">Example #5: Tab Gallery</Link></li>\r\n      <li><Link to=\"/tab-content/\">Example #6: Tab Content</Link></li>\r\n      <li><Link to=\"/collapsible-content/\">Example #7: Collapsible Content</Link></li>\r\n      <li><Link to=\"/draggable-element/\">Example #8: Draggable Element</Link></li>\r\n      <li><Link to=\"/draggable-note/\">Example #9: Draggable Note</Link></li>\r\n      <li><Link to=\"/sticky-notes/\">Example #10: Sticky Notes</Link></li>\r\n      <li><Link to=\"/countdown-timer/\">Example #11: Countdown Timer</Link></li>\r\n      <li><Link to=\"/tooltip/\">Example #12: Tooltip</Link></li>\r\n      <li><Link to=\"/scroll-to-top/\">Example #13: Scroll-To-Top</Link></li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/slideshow/\" component={SlideshowApp} />\r\n          <Route exact path=\"/slideshow-gallery/\" component={SlideshowGalleryApp} />\r\n          <Route exact path=\"/modal-image/\" component={ModalImageApp} />\r\n          <Route exact path=\"/lightbox/\" component={LightBoxApp} />\r\n          <Route exact path=\"/tab-gallery/\" component={TabGalleryApp} />\r\n          <Route exact path=\"/tab-content/\" component={TabContentApp} />\r\n          <Route exact path=\"/collapsible-content/\" component={CollapsibleContentApp} />\r\n          <Route exact path=\"/draggable-element/\" component={DraggableElementApp} />\r\n          <Route exact path=\"/draggable-note/\" component={DraggableNoteApp} />\r\n          <Route exact path=\"/sticky-notes/\" component={StickyNotesApp} />\r\n          <Route exact path=\"/countdown-timer/\" component={CountdownTimerApp} />\r\n          <Route exact path=\"/tooltip/\" component={TooltipApp} />\r\n          <Route exact path=\"/scroll-to-top/\" component={ScrollToTop} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}